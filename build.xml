<?xml version="1.0" encoding="UTF-8"?>
<project default="all" name="TEI-Publisher">
    <xmlproperty file="expath-pkg.xml" />
    <property file="local.build.properties" />
    <property file="build.properties" />
    <property name="project.version" value="${package(version)}"/>
    <property name="project.app" value="${package(abbrev)}"/>
    <property name="server.url" value="http://demo.exist-db.org/exist/apps/public-repo/public/" />
    <property name="build" value="build" />
    <property name="scripts.dir" value="node_modules/@teipublisher/pb-components/dist"/>

    <condition property="git.commit" value="${git.commit}" else="">
        <isset property="git.commit" />
    </condition>

    <target name="all" depends="xar" />

    <target name="rebuild" depends="clean,all" />

    <target name="clean">
        <delete dir="${build}"/>
        <delete dir="resources/scripts" includes="*.js *.map"/>
        <delete dir="resources/images/leaflet"/>
        <delete dir="resources/images/openseadragon"/>
        <delete dir="resources/i18n/common"/>
        <delete dir="resources/css" includes="leaflet/** prismjs/**"/>
        <delete dir="resources/lib"/>
    </target>
    <target name="prepare">
        <copy todir="resources/scripts">
            <fileset dir="${scripts.dir}">
                <include name="*.js"/>
                <include name="*.map"/>
            </fileset>
        </copy>
        <copy file="node_modules/leaflet/dist/leaflet.css" todir="resources/css/leaflet"/>
        <copy todir="resources/images/leaflet">
            <fileset dir="node_modules/leaflet/dist/images"/>
        </copy>
        <copy todir="resources/images/openseadragon">
            <fileset dir="node_modules/openseadragon/build/openseadragon/images"/>
        </copy>
        <copy file="node_modules/openseadragon/build/openseadragon/openseadragon.min.js" todir="resources/lib"/>
        <copy todir="resources/css/prismjs">
            <fileset dir="node_modules/prismjs/themes"/>
        </copy>
        <copy todir="resources/i18n/common">
            <fileset dir="${scripts.dir}/../i18n/common" />
        </copy>
    </target>

    <target name="xar-local" depends="clean,npm.install,prepare,xar" />

    <target name="xar">
        <mkdir dir="${build}" />
        <zip destfile="${build}/${project.app}-${project.version}${git.commit}.xar">
            <fileset dir=".">
                <exclude name="${build}/*" />
                <exclude name=".git*" />
                <exclude name="*.tmpl" />
                <exclude name="*.properties" />
                <exclude name="webtest/**" />
                <exclude name="cache/**" />
                <exclude name=".idea/" />
                <exclude name=".vscode/**" />
                <exclude name="package*.json" />
                <exclude name="rollup.config.js" />
                <exclude name=".existdb.json" />
                <exclude name=".editorconfig" />
                <exclude name=".devcontainer"/>
                <exclude name="node_modules/**" />
                <exclude name="Dockerfile*"/>
                <exclude name=".github/**"/>
                <exclude name=".babelrc"/>
                <exclude name=".travis.yml"/>
            </fileset>
        </zip>
    </target>

    <target name="npm.install">
        <exec executable="${npm}" outputproperty="npm.output">
            <arg line="install"/>
        </exec>
        <echo message="${npm.output}"/>
    </target>

    <target name="upload">
        <input message="Enter password:" addproperty="server.pass" defaultvalue="">
            <handler type="secure" />
        </input>
        <property name="xar" value="${project.app}-${project.version}${git.commit}.xar" />
        <exec executable="curl">
            <arg line="-T ${build}/${xar} -u admin:${server.pass} ${server.url}/${xar}" />
        </exec>
    </target>

</project>