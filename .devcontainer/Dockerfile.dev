FROM mcr.microsoft.com/vscode/devcontainers/java:dev-8

ARG EXIST_VERSION=6.0.1
ARG TEMPLATING_VERSION=1.0.4
ARG PUBLISHER_LIB_VERSION=2.10.1
ARG ROUTER_VERSION=0.5.1
ARG EDITOR_VERSION=1.0.1

ARG HTTP_PORT=8080
ARG HTTPS_PORT=8443

# [Option] Install Maven
ARG INSTALL_MAVEN="false"
ARG MAVEN_VERSION=""
# [Option] Install Gradle
ARG INSTALL_GRADLE="false"
ARG GRADLE_VERSION=""

RUN if [ "${INSTALL_MAVEN}" = "true" ]; then su vscode -c "source /usr/local/sdkman/bin/sdkman-init.sh && sdk install maven \"${MAVEN_VERSION}\""; fi \
    && if [ "${INSTALL_GRADLE}" = "true" ]; then su vscode -c "source /usr/local/sdkman/bin/sdkman-init.sh && sdk install gradle \"${GRADLE_VERSION}\""; fi

RUN su vscode -c "source /usr/local/sdkman/bin/sdkman-init.sh && sdk install ant"
ENV ANT_HOME=/usr/local/sdkman/candidates/ant/current
ENV PATH=${PATH}:${ANT_HOME}/bin

RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
    && apt-get -y install --no-install-recommends bzip2

# [Option] Install Node.js
ARG INSTALL_NODE="true"
ARG NODE_VERSION="lts/*"
RUN if [ "${INSTALL_NODE}" = "true" ]; then su vscode -c "source /usr/local/share/nvm/nvm.sh && nvm install ${NODE_VERSION} 2>&1"; fi

# Install python pip and upgrade it to latest version
RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
    && apt-get -y install --no-install-recommends bzip2 \
    && apt-get -y install --no-install-recommends python3-pip \
    && pip3 install --upgrade pip

# [Optional] Uncomment this line to install global node packages.
# RUN su vscode -c "source /usr/local/share/nvm/nvm.sh && npm install -g <your-package-here>" 2>&1

WORKDIR /workspaces

RUN curl -L -o exist-distribution-${EXIST_VERSION}-unix.tar.bz2 https://github.com/eXist-db/exist/releases/download/eXist-${EXIST_VERSION}/exist-distribution-${EXIST_VERSION}-unix.tar.bz2 \
    && tar xfj exist-distribution-${EXIST_VERSION}-unix.tar.bz2 -C /usr/local \
    && rm exist-distribution-${EXIST_VERSION}-unix.tar.bz2 \
    && mv /usr/local/exist-distribution-${EXIST_VERSION} /usr/local/exist

RUN curl -L -o /usr/local/exist/autodeploy/oas-router-${ROUTER_VERSION}.xar http://exist-db.org/exist/apps/public-repo/public/oas-router-${ROUTER_VERSION}.xar
RUN curl -L -o /usr/local/exist/autodeploy/tei-publisher-lib-${PUBLISHER_LIB_VERSION}.xar http://exist-db.org/exist/apps/public-repo/public/tei-publisher-lib-${PUBLISHER_LIB_VERSION}.xar
RUN curl -L -o /usr/local/exist/autodeploy/templating-${TEMPLATING_VERSION}.xar http://exist-db.org/exist/apps/public-repo/public/templating-${TEMPLATING_VERSION}.xar
RUN curl -L -o /usr/local/exist/autodeploy/atom-editor-${EDITOR_VERSION}.xar https://github.com/wolfgangmm/existdb-langserver/raw/master/resources/atom-editor-${EDITOR_VERSION}.xar

WORKDIR /usr/local/exist

ENV JAVA_HOME=/usr/local/sdkman/candidates/java/current

RUN bin/client.sh -l --no-gui --xpath "system:get-version()"

EXPOSE ${HTTP_PORT} 8001

ENV EXIST_HOME=/usr/local/exist
ENV JAVA_OPTS \
    -Djetty.port=${HTTP_PORT} \
    -Djetty.ssl.port=${HTTPS_PORT} \
    -Dfile.encoding=UTF8 \
    -Dsun.jnu.encoding=UTF-8 \
    -XX:+UseG1GC \
    -XX:+UseStringDeduplication \
    -XX:+UseContainerSupport \
    -XX:MaxRAMPercentage=${JVM_MAX_RAM_PERCENTAGE:-75.0} \ 
    -XX:+ExitOnOutOfMemoryError

ENTRYPOINT [ "/usr/local/exist/bin/startup.sh" ]